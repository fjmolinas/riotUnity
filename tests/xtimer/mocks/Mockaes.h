/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKAES_H
#define _MOCKAES_H

#include "aes.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mockaes_Init(void);
void Mockaes_Destroy(void);
void Mockaes_Verify(void);




#define aes_init_ExpectAndReturn(context, key, keySize, cmock_retval) aes_init_CMockExpectAndReturn(__LINE__, context, key, keySize, cmock_retval)
void aes_init_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, cipher_context_t* context, const uint8_t* key, uint8_t keySize, int cmock_to_return);
#define aes_encrypt_ExpectAndReturn(context, plain_block, cipher_block, cmock_retval) aes_encrypt_CMockExpectAndReturn(__LINE__, context, plain_block, cipher_block, cmock_retval)
void aes_encrypt_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const cipher_context_t* context, const uint8_t* plain_block, uint8_t* cipher_block, int cmock_to_return);
#define aes_decrypt_ExpectAndReturn(context, cipher_block, plain_block, cmock_retval) aes_decrypt_CMockExpectAndReturn(__LINE__, context, cipher_block, plain_block, cmock_retval)
void aes_decrypt_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, const cipher_context_t* context, const uint8_t* cipher_block, uint8_t* plain_block, int cmock_to_return);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
